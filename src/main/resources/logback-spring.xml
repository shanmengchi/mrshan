<?xml version="1.0" encoding="UTF-8"?>
<!--
scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--自定义颜色配置 此处converterClass引用的是日志颜色类的路径， 此匹配的是第二种控制台色彩输出方式-->
    <conversionRule conversionWord="customcolor" converterClass="com.github.jetty.config.LogbackColorful"/>
    <!-- 定义日志的要保存的根目录 -->

    <property name="APP_NAME" value="mrshan"/>
    <property name="HOME_LOG" value="/logs/app.log"/><!--日志首文件-->
    <springProfile name="dev"><!--dev和test环境属性-->
        <property name="HOME_LOG" value="D:/logs/${APP_NAME}/app.log"/><!--日志首文件-->
        <property name="LOG_HOME" value="D:/logs/${APP_NAME}/"/><!--日志压缩路径-->
    </springProfile>
    <springProfile name="online,uat">
        <property name="HOME_LOG" value="/app/log/app.log"/>
        <property name="LOG_HOME" value="/app/log/"/>
    </springProfile>

    <!--第二种控制台色彩输出方式-->
    <appender name="CONSLOG" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%red(%d{HH:mm:ss.SSS}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger) - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件   -->
    <!--该配置表示每天生成一个日志文件，保存30天的日志文件。-->
    <appender name="appLogAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 指定日志文件的名称 -->
        <file>${HOME_LOG}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}%d{yyyy-MM-dd}/${APP_NAME}-%d{yyyy-MM-dd}-%i.zip</fileNamePattern>
            <MaxHistory>30</MaxHistory><!--保留天数，设置大点，可以无视，通过-->
            <maxFileSize>10MB</maxFileSize><!--单个文件最大限制，超过则打包成zip文件-->
            <totalSizeCap>1GB</totalSizeCap><!--${LOG_HOME}目录总大小限制，超出则会删除较早的日志文件-->
        </rollingPolicy>
        <!-- 日志输出格式： -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [ %thread ] - [ %-5level ] [ %logger{50} : %line ] - %msg%n</pattern>
        </layout>
    </appender>


    <!-- 开发、测试环境 -->
    <springProfile name="dev,uat">
        <logger name="org.springframework.web" level="INFO"/>
        <logger name="com.github.jetty" level="INFO"/>
        <!-- com.fristapp是本项目的dao层的包，日志级别调成 DEBUG级别可以看到sql执行-->
        <logger name="com.github.jetty" level="DEBUG"/>

        <root level="INFO">
            <appender-ref ref="CONSLOG"/>
            <appender-ref ref="appLogAppender"/>
        </root>
    </springProfile>

    <!-- 生产环境 -->
    <springProfile name="online">
        <!--logger用来设置某一个包或者具体的某一个类的日志打印级别-->
        <!--name用来指定受此loger约束的某一个包或者具体的某一个类-->
        <logger name="org.springframework.web" level="ERROR"/>
        <logger name="com.github.jetty" level="ERROR"/>
        <root level="INFO">
            <appender-ref ref="CONSLOG"/>
            <appender-ref ref="appLogAppender"/>
        </root>
    </springProfile>






</configuration>
